{"version":3,"sources":["app.js","modules/spotlight.js","modules/team-list.js","components/modal.js","components/nav.js","util/constants.js"],"names":["require","Nav","Spotlight","TeamList","modules","forEach","module","init","_classCallCheck","_createClass","_require","MAX_WIDTH_MD","selector","el","this","items","querySelectorAll","wrapper","querySelector","prev","next","slideCount","length","activeSlide","renderWidth","window","innerWidth","getWrapperWidth","bind","prevSlide","nextSlide","resize","setActiveSlide","setWrapperWidth","addEventListener","key","value","concat","style","transform","item","link","tabIndex","classList","remove","activeLink","add","width","document","exports","_this","triggers","toggleRegion","trigger","regionId","getAttribute","region","expanded","setAttribute","toggle","textContent","getFocusableChildren","Modal","inner","openTrigger","closeTrigger","focusStart","focusEnd","open","closeModal","handleReverseFocus","toggleModal","restartFocus","e","keyCode","body","focus","focusableElements","relatedTarget","firstFocusable","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_Modal","call","panels","closePanel","getPanelFromTrigger","getTriggerFromPanel","togglePanel","panel","panelId","triggerId","_this2","console","log","current","_this3","MAX_WIDTH_LG","MAX_WIDTH_SM"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nrequire('core-js/modules/es6.promise');\nrequire('core-js/modules/es6.array.iterator');\nrequire('swiped-events');\n\nconst Nav = require('./components/nav');\nconst Spotlight = require('./modules/spotlight');\nconst TeamList = require('./modules/team-list');\n\nconst modules = [Nav, Spotlight, TeamList];\n\n// Initialize all modules\nmodules.forEach((module) => {\n  module.init();\n});\n","'use strict';\n\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.spotlight';\n\nclass Spotlight {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.items = el.querySelectorAll('.spotlight__slide');\n    this.wrapper = el.querySelector('.spotlight__slides-wrapper');\n    this.prev = el.querySelector('.spotlight__prev');\n    this.next = el.querySelector('.spotlight__next');\n\n    // State\n    this.slideCount = this.items.length;\n    this.activeSlide = 0;\n    this.renderWidth = window.innerWidth;\n\n    // Bindings\n    this.getWrapperWidth = this.getWrapperWidth.bind(this);\n    this.prevSlide = this.prevSlide.bind(this);\n    this.nextSlide = this.nextSlide.bind(this);\n    this.resize = this.resize.bind(this);\n    this.setActiveSlide = this.setActiveSlide.bind(this);\n    this.setWrapperWidth = this.setWrapperWidth.bind(this);\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n    this.prev.addEventListener('click', this.prevSlide);\n    this.next.addEventListener('click', this.nextSlide);\n    this.wrapper.addEventListener('swiped-right', this.prevSlide);\n    this.wrapper.addEventListener('swiped-left', this.nextSlide);\n\n    // Initialize\n    this.setWrapperWidth();\n    this.setActiveSlide();\n  }\n\n  /**\n   * Gets the wrapper width based on the viewport size\n   * @returns {string}\n   */\n  getWrapperWidth() {\n    if (this.renderWidth <= MAX_WIDTH_MD) {\n      return `calc(${this.slideCount} * (100% + 16px))`;\n    } else {\n      return `calc(${this.slideCount} * 62%`;\n    }\n  }\n\n  /**\n   * Sets active slide to next slide\n   */\n  nextSlide() {\n    const nextSlide = this.activeSlide + 1;\n\n    this.activeSlide = nextSlide < this.slideCount ? nextSlide : 0;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Sets active slide to previous slide\n   */\n  prevSlide() {\n    const prevSlide = this.activeSlide - 1;\n\n    this.activeSlide = prevSlide >= 0 ? prevSlide : this.slideCount - 1;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      this.renderWidth = window.innerWidth;\n      this.setWrapperWidth();\n      this.setActiveSlide();\n    }\n  }\n\n  /**\n   * Sets the active slide by transforming the wrapper\n   */\n  setActiveSlide() {\n    this.wrapper.style.transform = `translateX(calc(-${\n      this.activeSlide\n    } * (100% / ${this.slideCount})))`;\n\n    // Remove active class from all slides\n    this.items.forEach((item) => {\n      const link = item.querySelector('.spotlight__slide-link');\n\n      if (link) {\n        link.tabIndex = -1;\n      }\n      item.classList.remove('spotlight__slide--active');\n    });\n\n    // Add active class to activeSlide\n    const activeSlide = this.items[this.activeSlide];\n    const activeLink = activeSlide.querySelector('.spotlight__slide-link');\n\n    if (activeLink) {\n      activeLink.tabIndex = 0;\n    }\n    this.items[this.activeSlide].classList.add('spotlight__slide--active');\n  }\n\n  /**\n   * Sets the wrapper width\n   */\n  setWrapperWidth() {\n    this.wrapper.style.width = this.getWrapperWidth();\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Spotlight(el);\n    });\n  }\n}\n\nmodule.exports = Spotlight;\n","'use strict';\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.team-list';\n\nclass TeamList {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    this.el = el;\n    this.triggers = el.querySelectorAll('.team-list__learn-more');\n\n    // Bindings\n    this.toggleRegion = this.toggleRegion.bind(this);\n\n    // Listeners\n    this.triggers.forEach((trigger) => {\n      trigger.addEventListener('click', () => this.toggleRegion(trigger));\n    });\n  }\n\n  toggleRegion(trigger) {\n    const regionId = trigger.getAttribute('aria-controls');\n    const region = this.el.querySelector(`#${regionId}`);\n    const expanded = trigger.getAttribute('aria-expanded');\n\n    // Open this region\n    trigger.setAttribute(\n      'aria-expanded',\n      expanded === 'false' ? 'true' : 'false'\n    );\n    region.classList.toggle('team-list__body--expanded');\n    trigger.textContent = expanded === 'false' ? 'Show less' : 'Learn more';\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new TeamList(el);\n    });\n  }\n}\n\nmodule.exports = TeamList;\n","'use strict';\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.modal';\n\n/**\n * Finds the focusable children of a DOM element\n * @param el\n * @returns {NodeListOf<SVGElementTagNameMap[[string]]> | NodeListOf<HTMLElementTagNameMap[[string]]> | NodeListOf<Element>}\n */\nfunction getFocusableChildren(el) {\n  const focusableSelector =\n    'a:not([disabled]), button:not([disabled]), input:not([disabled]), select';\n\n  return el.querySelectorAll(focusableSelector);\n}\n\nclass Modal {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.inner = el.querySelector('.modal__inner');\n    this.openTrigger = el.querySelector('.modal__open');\n    this.closeTrigger = el.querySelector('.modal__close');\n    this.focusStart = el.querySelector('.modal__focus-start');\n    this.focusEnd = el.querySelector('.modal__focus-end');\n\n    // State\n    this.open = false;\n\n    // Bindings\n    this.closeModal = this.closeModal.bind(this);\n    this.handleReverseFocus = this.handleReverseFocus.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.restartFocus = this.restartFocus.bind(this);\n\n    // Listeners\n    window.addEventListener('keyup', (e) => {\n      if (e.keyCode === 27) {\n        this.closeModal();\n      }\n    });\n    this.openTrigger.addEventListener('click', this.toggleModal);\n    this.closeTrigger.addEventListener('click', this.toggleModal);\n    this.focusStart.addEventListener('focus', this.handleReverseFocus);\n    this.focusEnd.addEventListener('focus', this.restartFocus);\n  }\n\n  /**\n   * Closes the modal\n   */\n  closeModal() {\n    if (open) {\n      this.open = false;\n      this.inner.classList.remove('modal__inner--open');\n      document.body.classList.remove('modal--open');\n      this.openTrigger.focus();\n    }\n  }\n\n  /**\n   * Sets focus on the last element that focus came from\n   * @param e\n   */\n  handleReverseFocus(e) {\n    const focusableElements = getFocusableChildren(this.inner);\n\n    if (e.relatedTarget === focusableElements[0]) {\n      const lastFocusable = focusableElements[focusableElements.length - 1];\n\n      lastFocusable.focus();\n    }\n  }\n\n  /**\n   * Toggles the modal visibility\n   */\n  toggleModal() {\n    this.open = !this.open;\n    this.inner.classList.toggle('modal__inner--open');\n    document.body.classList.toggle('modal--open');\n\n    if (this.open) {\n      this.closeTrigger.focus();\n    } else {\n      this.openTrigger.focus();\n    }\n  }\n\n  /**\n   * Focuses the first focusable element on the modal\n   */\n  restartFocus() {\n    const focusableElements = getFocusableChildren(this.inner);\n    const firstFocusable = focusableElements[0];\n\n    firstFocusable && firstFocusable.focus();\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Modal(el);\n    });\n  }\n}\n\nmodule.exports = Modal;\n","'use strict';\n\nconst Modal = require('./modal');\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.global-nav';\n\nclass Nav extends Modal {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    super(el);\n\n    // Elements\n    this.el = el;\n    this.triggers = el.querySelectorAll('.menu__trigger');\n    this.panels = el.querySelectorAll('.sub-menu');\n\n    // State\n    this.renderWidth = window.innerWidth;\n\n    // Bindings\n    this.closePanel = this.closePanel.bind(this);\n    this.getPanelFromTrigger = this.getPanelFromTrigger.bind(this);\n    this.getTriggerFromPanel = this.getTriggerFromPanel.bind(this);\n    this.resize = this.resize.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n    this.triggers.forEach((trigger) => {\n      trigger.addEventListener('click', () => this.togglePanel(trigger));\n    });\n  }\n\n  /**\n   * Closes a menu panel\n   * @param trigger\n   */\n  closePanel(trigger) {\n    const panel = this.getPanelFromTrigger(trigger);\n\n    trigger.setAttribute('aria-expanded', 'false');\n    trigger.classList.remove('menu__trigger--expanded');\n    panel.classList.remove('sub-menu--expanded');\n  }\n\n  /**\n   * Gets the panel node from the trigger node\n   * @param trigger\n   * @returns {Element | any}\n   */\n  getPanelFromTrigger(trigger) {\n    const panelId = trigger.getAttribute('aria-controls');\n    return this.el.querySelector(`#${panelId}`);\n  }\n\n  /**\n   * Gets the trigger node from the panel node\n   * @param panel\n   * @returns {Element | any}\n   */\n  getTriggerFromPanel(panel) {\n    const triggerId = panel.getAttribute('aria-labelledby');\n    return this.el.querySelector(`#${triggerId}`);\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      console.log(window.innerWidth);\n      this.renderWidth = window.innerWidth;\n\n      // Close all panels\n      this.triggers.forEach((current) => {\n        this.closePanel(current);\n      });\n\n      // Close the modal\n      this.closeModal();\n    }\n  }\n\n  /**\n   * Toggles a nav menu panel\n   * @param trigger\n   */\n  togglePanel(trigger) {\n    const panel = this.getPanelFromTrigger(trigger);\n    const expanded = trigger.getAttribute('aria-expanded');\n\n    // Open this panel\n    trigger.setAttribute(\n      'aria-expanded',\n      expanded === 'false' ? 'true' : 'false'\n    );\n    trigger.classList.toggle('.menu__trigger--expanded');\n    panel.classList.toggle('sub-menu--expanded');\n\n    // Close other panels\n    this.triggers.forEach((current) => {\n      if (current !== trigger) {\n        this.closePanel(current);\n      }\n    });\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Nav(el);\n    });\n  }\n}\n\nmodule.exports = Nav;\n","'use strict';\n\n/**\n * Max width for large viewports\n * @type {number}\n */\nconst MAX_WIDTH_LG = 1440;\n\n/**\n * Max width for medium viewports\n * @type {number}\n */\nconst MAX_WIDTH_MD = 1024;\n\n/**\n * Max width for small viewports\n * @type {number}\n */\nconst MAX_WIDTH_SM = 767;\n\nmodule.exports = {\n  MAX_WIDTH_LG,\n  MAX_WIDTH_MD,\n  MAX_WIDTH_SM\n};\n"]}
{"version":3,"sources":["app.js","util/constants.js","modules/nav.js","modules/spotlight.js"],"names":["require","Nav","Spotlight","modules","forEach","module","init","MAX_WIDTH_LG","MAX_WIDTH_MD","MAX_WIDTH_SM","exports","_classCallCheck","_createClass","_require","selector","el","_this","this","triggers","querySelectorAll","panels","renderWidth","window","innerWidth","addEventListener","resize","togglePanel","bind","trigger","key","value","panelId","getAttribute","panel","querySelector","concat","expanded","setAttribute","classList","toggle","document","items","wrapper","prev","next","slideCount","length","activeSlide","getWrapperWidth","prevSlide","nextSlide","setActiveSlide","setWrapperWidth","style","transform","item","link","tabIndex","remove","activeLink","add","width"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nrequire('core-js/modules/es6.promise');\nrequire('core-js/modules/es6.array.iterator');\nrequire('swiped-events');\n\nconst Nav = require('./modules/nav');\nconst Spotlight = require('./modules/spotlight');\n\nconst modules = [Nav, Spotlight];\n\n// Initialize all modules\nmodules.forEach((module) => {\n  module.init();\n});\n","'use strict';\n\n/**\n * Max width for large viewports\n * @type {number}\n */\nconst MAX_WIDTH_LG = 1440;\n\n/**\n * Max width for medium viewports\n * @type {number}\n */\nconst MAX_WIDTH_MD = 1024;\n\n/**\n * Max width for small viewports\n * @type {number}\n */\nconst MAX_WIDTH_SM = 767;\n\nmodule.exports = {\n  MAX_WIDTH_LG,\n  MAX_WIDTH_MD,\n  MAX_WIDTH_SM\n};\n","'use strict';\n\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.global-nav';\n\nclass Nav {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.triggers = el.querySelectorAll('.menu__trigger');\n    this.panels = el.querySelectorAll('.sub-menu');\n\n    // State\n    this.renderWidth = window.innerWidth;\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n\n    // Bindings\n    this.togglePanel = this.togglePanel.bind(this);\n\n    this.triggers.forEach((trigger) => {\n      trigger.addEventListener('click', () => this.togglePanel(trigger));\n    });\n  }\n\n  /**\n   * Toggles a nav menu panel\n   * @param trigger\n   */\n  togglePanel(trigger) {\n    const panelId = trigger.getAttribute('aria-controls');\n    const panel = this.el.querySelector(`#${panelId}`);\n    const expanded = trigger.getAttribute('aria-expanded');\n\n    // Open this panel\n    trigger.setAttribute(\n      'aria-expanded',\n      expanded === 'false' ? 'true' : 'false'\n    );\n    trigger.classList.toggle('.menu__trigger--expanded');\n    panel.classList.toggle('sub-menu--expanded');\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      this.renderWidth = window.innerWidth;\n    }\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Nav(el);\n    });\n  }\n}\n\nmodule.exports = Nav;\n","'use strict';\n\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.spotlight';\n\nclass Spotlight {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.items = el.querySelectorAll('.spotlight__slide');\n    this.wrapper = el.querySelector('.spotlight__slides-wrapper');\n    this.prev = el.querySelector('.spotlight__prev');\n    this.next = el.querySelector('.spotlight__next');\n\n    // State\n    this.slideCount = this.items.length;\n    this.activeSlide = 0;\n    this.renderWidth = window.innerWidth;\n\n    // Bindings\n    this.getWrapperWidth = this.getWrapperWidth.bind(this);\n    this.prevSlide = this.prevSlide.bind(this);\n    this.nextSlide = this.nextSlide.bind(this);\n    this.resize = this.resize.bind(this);\n    this.setActiveSlide = this.setActiveSlide.bind(this);\n    this.setWrapperWidth = this.setWrapperWidth.bind(this);\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n    this.prev.addEventListener('click', this.prevSlide);\n    this.next.addEventListener('click', this.nextSlide);\n    this.wrapper.addEventListener('swiped-right', this.prevSlide);\n    this.wrapper.addEventListener('swiped-left', this.nextSlide);\n\n    // Initialize\n    this.setWrapperWidth();\n    this.setActiveSlide();\n  }\n\n  /**\n   * Gets the wrapper width based on the viewport size\n   * @returns {string}\n   */\n  getWrapperWidth() {\n    if (this.renderWidth <= MAX_WIDTH_MD) {\n      return `calc(${this.slideCount} * (100% + 16px))`;\n    } else {\n      return `calc(${this.slideCount} * 62%`;\n    }\n  }\n\n  /**\n   * Sets active slide to next slide\n   */\n  nextSlide() {\n    const nextSlide = this.activeSlide + 1;\n\n    this.activeSlide = nextSlide < this.slideCount ? nextSlide : 0;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Sets active slide to previous slide\n   */\n  prevSlide() {\n    const prevSlide = this.activeSlide - 1;\n\n    this.activeSlide = prevSlide >= 0 ? prevSlide : this.slideCount - 1;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      this.renderWidth = window.innerWidth;\n      this.setWrapperWidth();\n      this.setActiveSlide();\n    }\n  }\n\n  /**\n   * Sets the active slide by transforming the wrapper\n   */\n  setActiveSlide() {\n    this.wrapper.style.transform = `translateX(calc(-${\n      this.activeSlide\n    } * (100% / ${this.slideCount})))`;\n\n    // Remove active class from all slides\n    this.items.forEach((item) => {\n      const link = item.querySelector('.spotlight__slide-link');\n\n      if (link) {\n        link.tabIndex = -1;\n      }\n      item.classList.remove('spotlight__slide--active');\n    });\n\n    // Add active class to activeSlide\n    const activeSlide = this.items[this.activeSlide];\n    const activeLink = activeSlide.querySelector('.spotlight__slide-link');\n\n    if (activeLink) {\n      activeLink.tabIndex = 0;\n    }\n    this.items[this.activeSlide].classList.add('spotlight__slide--active');\n  }\n\n  /**\n   * Sets the wrapper width\n   */\n  setWrapperWidth() {\n    this.wrapper.style.width = this.getWrapperWidth();\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Spotlight(el);\n    });\n  }\n}\n\nmodule.exports = Spotlight;\n"]}
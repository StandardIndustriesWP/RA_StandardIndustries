{"version":3,"sources":["app.js","components/modal.js","components/nav.js","modules/spotlight.js","util/constants.js"],"names":["require","Nav","Spotlight","modules","forEach","module","init","_classCallCheck","_createClass","selector","getFocusableChildren","el","querySelectorAll","Modal","_this","this","content","querySelector","openTrigger","closeTrigger","focusStart","focusEnd","open","window","addEventListener","e","keyCode","closeModal","bind","toggleModal","handleReverseFocus","restartFocus","key","value","classList","remove","document","body","focus","toggle","focusableElements","relatedTarget","length","firstFocusable","exports","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_require","MAX_WIDTH_MD","_Modal","call","triggers","panels","renderWidth","innerWidth","resize","getPanelFromTrigger","getTriggerFromPanel","togglePanel","closePanel","trigger","panel","panelId","getAttribute","concat","triggerId","_this2","expanded","setAttribute","current","items","wrapper","prev","next","slideCount","activeSlide","getWrapperWidth","prevSlide","nextSlide","setActiveSlide","setWrapperWidth","style","transform","item","link","tabIndex","activeLink","add","width","MAX_WIDTH_LG","MAX_WIDTH_SM"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nrequire('core-js/modules/es6.promise');\nrequire('core-js/modules/es6.array.iterator');\nrequire('swiped-events');\n\nconst Nav = require('./components/nav');\nconst Spotlight = require('./modules/spotlight');\n\nconst modules = [Nav, Spotlight];\n\n// Initialize all modules\nmodules.forEach((module) => {\n  module.init();\n});\n","'use strict';\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.modal';\n\n/**\n * Finds the focusable children of a DOM element\n * @param el\n * @returns {NodeListOf<SVGElementTagNameMap[[string]]> | NodeListOf<HTMLElementTagNameMap[[string]]> | NodeListOf<Element>}\n */\nfunction getFocusableChildren(el) {\n  const focusableSelector =\n    'a:not([disabled]), button:not([disabled]), input:not([disabled]), select';\n\n  return el.querySelectorAll(focusableSelector);\n}\n\nclass Modal {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.content = el.querySelector('.modal__content');\n    this.openTrigger = el.querySelector('.modal__open');\n    this.closeTrigger = el.querySelector('.modal__close');\n    this.focusStart = el.querySelector('.modal__focus-start');\n    this.focusEnd = el.querySelector('.modal__focus-end');\n\n    // State\n    this.open = false;\n\n    // Listeners\n    window.addEventListener('keyup', (e) => {\n      if (e.keyCode === 27) {\n        this.closeModal();\n      }\n    });\n\n    // Bindings\n    this.closeModal = this.closeModal.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleReverseFocus = this.handleReverseFocus.bind(this);\n    this.restartFocus = this.restartFocus.bind(this);\n    this.openTrigger.addEventListener('click', this.toggleModal);\n    this.closeTrigger.addEventListener('click', this.toggleModal);\n    this.focusStart.addEventListener('focus', this.handleReverseFocus);\n    this.focusEnd.addEventListener('focus', this.restartFocus);\n  }\n\n  /**\n   * Closes the modal\n   */\n  closeModal() {\n    if (open) {\n      this.open = false;\n      this.content.classList.remove('modal__content--open');\n      document.body.classList.remove('modal--open');\n      this.openTrigger.focus();\n    }\n  }\n\n  /**\n   * Toggles the modal visibility\n   */\n  toggleModal() {\n    this.open = !this.open;\n    this.content.classList.toggle('modal__content--open');\n    document.body.classList.toggle('modal--open');\n\n    if (this.open) {\n      this.closeTrigger.focus();\n    } else {\n      this.openTrigger.focus();\n    }\n  }\n\n  /**\n   * Sets focus on the last element that focus came from\n   * @param e\n   */\n  handleReverseFocus(e) {\n    const focusableElements = getFocusableChildren(this.content);\n\n    if (e.relatedTarget === focusableElements[0]) {\n      const lastFocusable = focusableElements[focusableElements.length - 1];\n\n      lastFocusable.focus();\n    }\n  }\n\n  /**\n   * Focuses the first focusable element on the modal\n   */\n  restartFocus() {\n    const focusableElements = getFocusableChildren(this.content);\n    const firstFocusable = focusableElements[0];\n\n    firstFocusable && firstFocusable.focus();\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Modal(el);\n    });\n  }\n}\n\nmodule.exports = Modal;\n","'use strict';\n\nconst Modal = require('./modal');\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.global-nav';\n\nclass Nav extends Modal {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    super(el);\n\n    // Elements\n    this.el = el;\n    this.triggers = el.querySelectorAll('.menu__trigger');\n    this.panels = el.querySelectorAll('.sub-menu');\n\n    // State\n    this.renderWidth = window.innerWidth;\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n\n    // Bindings\n    this.getPanelFromTrigger = this.getPanelFromTrigger.bind(this);\n    this.getTriggerFromPanel = this.getTriggerFromPanel.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n    this.closePanel = this.closePanel.bind(this);\n    this.triggers.forEach((trigger) => {\n      trigger.addEventListener('click', () => this.togglePanel(trigger));\n    });\n    this.panels.forEach((panel) => {\n      const trigger = this.getTriggerFromPanel(panel);\n\n      panel.addEventListener('mouseout', () => this.closePanel(trigger));\n    });\n  }\n\n  /**\n   * Gets the panel node from the trigger node\n   * @param trigger\n   * @returns {Element | any}\n   */\n  getPanelFromTrigger(trigger) {\n    const panelId = trigger.getAttribute('aria-controls');\n    return this.el.querySelector(`#${panelId}`);\n  }\n\n  /**\n   * Gets the trigger node from the panel node\n   * @param panel\n   * @returns {Element | any}\n   */\n  getTriggerFromPanel(panel) {\n    const triggerId = panel.getAttribute('aria-labelledby');\n    return this.el.querySelector(`#${triggerId}`);\n  }\n\n  /**\n   * Toggles a nav menu panel\n   * @param trigger\n   */\n  togglePanel(trigger) {\n    const panel = this.getPanelFromTrigger(trigger);\n    const expanded = trigger.getAttribute('aria-expanded');\n\n    // Open this panel\n    trigger.setAttribute(\n      'aria-expanded',\n      expanded === 'false' ? 'true' : 'false'\n    );\n    trigger.classList.toggle('.menu__trigger--expanded');\n    panel.classList.toggle('sub-menu--expanded');\n\n    // Close other panels\n    this.triggers.forEach((current) => {\n      if (current !== trigger) {\n        this.closePanel(current);\n      }\n    });\n  }\n\n  closePanel(trigger) {\n    const panel = this.getPanelFromTrigger(trigger);\n\n    trigger.setAttribute('aria-expanded', 'false');\n    trigger.classList.remove('menu__trigger--expanded');\n    panel.classList.remove('sub-menu--expanded');\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      this.renderWidth = window.innerWidth;\n    }\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Nav(el);\n    });\n  }\n}\n\nmodule.exports = Nav;\n","'use strict';\n\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.spotlight';\n\nclass Spotlight {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.items = el.querySelectorAll('.spotlight__slide');\n    this.wrapper = el.querySelector('.spotlight__slides-wrapper');\n    this.prev = el.querySelector('.spotlight__prev');\n    this.next = el.querySelector('.spotlight__next');\n\n    // State\n    this.slideCount = this.items.length;\n    this.activeSlide = 0;\n    this.renderWidth = window.innerWidth;\n\n    // Bindings\n    this.getWrapperWidth = this.getWrapperWidth.bind(this);\n    this.prevSlide = this.prevSlide.bind(this);\n    this.nextSlide = this.nextSlide.bind(this);\n    this.resize = this.resize.bind(this);\n    this.setActiveSlide = this.setActiveSlide.bind(this);\n    this.setWrapperWidth = this.setWrapperWidth.bind(this);\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n    this.prev.addEventListener('click', this.prevSlide);\n    this.next.addEventListener('click', this.nextSlide);\n    this.wrapper.addEventListener('swiped-right', this.prevSlide);\n    this.wrapper.addEventListener('swiped-left', this.nextSlide);\n\n    // Initialize\n    this.setWrapperWidth();\n    this.setActiveSlide();\n  }\n\n  /**\n   * Gets the wrapper width based on the viewport size\n   * @returns {string}\n   */\n  getWrapperWidth() {\n    if (this.renderWidth <= MAX_WIDTH_MD) {\n      return `calc(${this.slideCount} * (100% + 16px))`;\n    } else {\n      return `calc(${this.slideCount} * 62%`;\n    }\n  }\n\n  /**\n   * Sets active slide to next slide\n   */\n  nextSlide() {\n    const nextSlide = this.activeSlide + 1;\n\n    this.activeSlide = nextSlide < this.slideCount ? nextSlide : 0;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Sets active slide to previous slide\n   */\n  prevSlide() {\n    const prevSlide = this.activeSlide - 1;\n\n    this.activeSlide = prevSlide >= 0 ? prevSlide : this.slideCount - 1;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      this.renderWidth = window.innerWidth;\n      this.setWrapperWidth();\n      this.setActiveSlide();\n    }\n  }\n\n  /**\n   * Sets the active slide by transforming the wrapper\n   */\n  setActiveSlide() {\n    this.wrapper.style.transform = `translateX(calc(-${\n      this.activeSlide\n    } * (100% / ${this.slideCount})))`;\n\n    // Remove active class from all slides\n    this.items.forEach((item) => {\n      const link = item.querySelector('.spotlight__slide-link');\n\n      if (link) {\n        link.tabIndex = -1;\n      }\n      item.classList.remove('spotlight__slide--active');\n    });\n\n    // Add active class to activeSlide\n    const activeSlide = this.items[this.activeSlide];\n    const activeLink = activeSlide.querySelector('.spotlight__slide-link');\n\n    if (activeLink) {\n      activeLink.tabIndex = 0;\n    }\n    this.items[this.activeSlide].classList.add('spotlight__slide--active');\n  }\n\n  /**\n   * Sets the wrapper width\n   */\n  setWrapperWidth() {\n    this.wrapper.style.width = this.getWrapperWidth();\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Spotlight(el);\n    });\n  }\n}\n\nmodule.exports = Spotlight;\n","'use strict';\n\n/**\n * Max width for large viewports\n * @type {number}\n */\nconst MAX_WIDTH_LG = 1440;\n\n/**\n * Max width for medium viewports\n * @type {number}\n */\nconst MAX_WIDTH_MD = 1024;\n\n/**\n * Max width for small viewports\n * @type {number}\n */\nconst MAX_WIDTH_SM = 767;\n\nmodule.exports = {\n  MAX_WIDTH_LG,\n  MAX_WIDTH_MD,\n  MAX_WIDTH_SM\n};\n"]}
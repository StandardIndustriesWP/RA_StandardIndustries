{"version":3,"sources":["app.js","modules/nav.js","modules/spotlight.js","util/constants.js"],"names":["require","Nav","Spotlight","modules","forEach","module","init","_classCallCheck","_createClass","_require","MAX_WIDTH_MD","selector","el","_this","this","triggers","querySelectorAll","panels","renderWidth","window","innerWidth","addEventListener","resize","getPanelFromTrigger","bind","getTriggerFromPanel","togglePanel","closePanel","trigger","panel","key","value","panelId","getAttribute","querySelector","concat","triggerId","_this2","expanded","setAttribute","classList","toggle","current","remove","document","exports","items","wrapper","prev","next","slideCount","length","activeSlide","getWrapperWidth","prevSlide","nextSlide","setActiveSlide","setWrapperWidth","style","transform","item","link","tabIndex","activeLink","add","width","MAX_WIDTH_LG","MAX_WIDTH_SM"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nrequire('core-js/modules/es6.promise');\nrequire('core-js/modules/es6.array.iterator');\nrequire('swiped-events');\n\nconst Nav = require('./modules/nav');\nconst Spotlight = require('./modules/spotlight');\n\nconst modules = [Nav, Spotlight];\n\n// Initialize all modules\nmodules.forEach((module) => {\n  module.init();\n});\n","'use strict';\n\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.global-nav';\n\nclass Nav {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.triggers = el.querySelectorAll('.menu__trigger');\n    this.panels = el.querySelectorAll('.sub-menu');\n\n    // State\n    this.renderWidth = window.innerWidth;\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n\n    // Bindings\n    this.getPanelFromTrigger = this.getPanelFromTrigger.bind(this);\n    this.getTriggerFromPanel = this.getTriggerFromPanel.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n    this.closePanel = this.closePanel.bind(this);\n    this.triggers.forEach((trigger) => {\n      trigger.addEventListener('click', () => this.togglePanel(trigger));\n    });\n    this.panels.forEach((panel) => {\n      const trigger = this.getTriggerFromPanel(panel);\n\n      panel.addEventListener('mouseout', () => this.closePanel(trigger));\n    });\n  }\n\n  /**\n   * Gets the panel node from the trigger node\n   * @param trigger\n   * @returns {Element | any}\n   */\n  getPanelFromTrigger(trigger) {\n    const panelId = trigger.getAttribute('aria-controls');\n    return this.el.querySelector(`#${panelId}`);\n  }\n\n  /**\n   * Gets the trigger node from the panel node\n   * @param panel\n   * @returns {Element | any}\n   */\n  getTriggerFromPanel(panel) {\n    const triggerId = panel.getAttribute('aria-labelledby');\n    return this.el.querySelector(`#${triggerId}`);\n  }\n\n  /**\n   * Toggles a nav menu panel\n   * @param trigger\n   */\n  togglePanel(trigger) {\n    const panel = this.getPanelFromTrigger(trigger);\n    const expanded = trigger.getAttribute('aria-expanded');\n\n    // Open this panel\n    trigger.setAttribute(\n      'aria-expanded',\n      expanded === 'false' ? 'true' : 'false'\n    );\n    trigger.classList.toggle('.menu__trigger--expanded');\n    panel.classList.toggle('sub-menu--expanded');\n\n    // Close other panels\n    this.triggers.forEach((current) => {\n      if (current !== trigger) {\n        this.closePanel(current);\n      }\n    });\n  }\n\n  closePanel(trigger) {\n    const panel = this.getPanelFromTrigger(trigger);\n\n    trigger.setAttribute('aria-expanded', 'false');\n    trigger.classList.remove('menu__trigger--expanded');\n    panel.classList.remove('sub-menu--expanded');\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      this.renderWidth = window.innerWidth;\n    }\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Nav(el);\n    });\n  }\n}\n\nmodule.exports = Nav;\n","'use strict';\n\nconst { MAX_WIDTH_MD } = require('../util/constants');\n\n/**\n * The element selector\n * @type {string}\n */\nconst selector = '.spotlight';\n\nclass Spotlight {\n  /**\n   * Component constructor, sets initial state\n   * @param el\n   */\n  constructor(el) {\n    // Elements\n    this.el = el;\n    this.items = el.querySelectorAll('.spotlight__slide');\n    this.wrapper = el.querySelector('.spotlight__slides-wrapper');\n    this.prev = el.querySelector('.spotlight__prev');\n    this.next = el.querySelector('.spotlight__next');\n\n    // State\n    this.slideCount = this.items.length;\n    this.activeSlide = 0;\n    this.renderWidth = window.innerWidth;\n\n    // Bindings\n    this.getWrapperWidth = this.getWrapperWidth.bind(this);\n    this.prevSlide = this.prevSlide.bind(this);\n    this.nextSlide = this.nextSlide.bind(this);\n    this.resize = this.resize.bind(this);\n    this.setActiveSlide = this.setActiveSlide.bind(this);\n    this.setWrapperWidth = this.setWrapperWidth.bind(this);\n\n    // Listeners\n    window.addEventListener('resize', this.resize, false);\n    this.prev.addEventListener('click', this.prevSlide);\n    this.next.addEventListener('click', this.nextSlide);\n    this.wrapper.addEventListener('swiped-right', this.prevSlide);\n    this.wrapper.addEventListener('swiped-left', this.nextSlide);\n\n    // Initialize\n    this.setWrapperWidth();\n    this.setActiveSlide();\n  }\n\n  /**\n   * Gets the wrapper width based on the viewport size\n   * @returns {string}\n   */\n  getWrapperWidth() {\n    if (this.renderWidth <= MAX_WIDTH_MD) {\n      return `calc(${this.slideCount} * (100% + 16px))`;\n    } else {\n      return `calc(${this.slideCount} * 62%`;\n    }\n  }\n\n  /**\n   * Sets active slide to next slide\n   */\n  nextSlide() {\n    const nextSlide = this.activeSlide + 1;\n\n    this.activeSlide = nextSlide < this.slideCount ? nextSlide : 0;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Sets active slide to previous slide\n   */\n  prevSlide() {\n    const prevSlide = this.activeSlide - 1;\n\n    this.activeSlide = prevSlide >= 0 ? prevSlide : this.slideCount - 1;\n    this.setActiveSlide();\n  }\n\n  /**\n   * Updates the component when viewport size changes\n   */\n  resize() {\n    if (\n      (this.renderWidth <= MAX_WIDTH_MD && window.innerWidth > MAX_WIDTH_MD) ||\n      (this.renderWidth > MAX_WIDTH_MD && window.innerWidth <= MAX_WIDTH_MD)\n    ) {\n      this.renderWidth = window.innerWidth;\n      this.setWrapperWidth();\n      this.setActiveSlide();\n    }\n  }\n\n  /**\n   * Sets the active slide by transforming the wrapper\n   */\n  setActiveSlide() {\n    this.wrapper.style.transform = `translateX(calc(-${\n      this.activeSlide\n    } * (100% / ${this.slideCount})))`;\n\n    // Remove active class from all slides\n    this.items.forEach((item) => {\n      const link = item.querySelector('.spotlight__slide-link');\n\n      if (link) {\n        link.tabIndex = -1;\n      }\n      item.classList.remove('spotlight__slide--active');\n    });\n\n    // Add active class to activeSlide\n    const activeSlide = this.items[this.activeSlide];\n    const activeLink = activeSlide.querySelector('.spotlight__slide-link');\n\n    if (activeLink) {\n      activeLink.tabIndex = 0;\n    }\n    this.items[this.activeSlide].classList.add('spotlight__slide--active');\n  }\n\n  /**\n   * Sets the wrapper width\n   */\n  setWrapperWidth() {\n    this.wrapper.style.width = this.getWrapperWidth();\n  }\n\n  /**\n   * Initializes all spotlights on a page\n   */\n  static init() {\n    const modules = document.querySelectorAll(selector);\n\n    modules.forEach((el) => {\n      new Spotlight(el);\n    });\n  }\n}\n\nmodule.exports = Spotlight;\n","'use strict';\n\n/**\n * Max width for large viewports\n * @type {number}\n */\nconst MAX_WIDTH_LG = 1440;\n\n/**\n * Max width for medium viewports\n * @type {number}\n */\nconst MAX_WIDTH_MD = 1024;\n\n/**\n * Max width for small viewports\n * @type {number}\n */\nconst MAX_WIDTH_SM = 767;\n\nmodule.exports = {\n  MAX_WIDTH_LG,\n  MAX_WIDTH_MD,\n  MAX_WIDTH_SM\n};\n"]}